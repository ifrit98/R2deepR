% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callback.R
\name{CallbackOptCheckpoint}
\alias{CallbackOptCheckpoint}
\title{Custom callback for saving epoch optimizer weights}
\description{
Custom callback for saving epoch optimizer weights

Custom callback for saving epoch optimizer weights
}
\section{Super class}{
\code{\link[keras:KerasCallback]{keras::KerasCallback}} -> \code{KerasCallback}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CallbackOptCheckpoint$new()}}
\item \href{#method-on_epoch_end}{\code{CallbackOptCheckpoint$on_epoch_end()}}
\item \href{#method-clone}{\code{CallbackOptCheckpoint$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_batch_begin">}\href{../../keras/html/KerasCallback.html#method-on_batch_begin}{\code{keras::KerasCallback$on_batch_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_batch_end">}\href{../../keras/html/KerasCallback.html#method-on_batch_end}{\code{keras::KerasCallback$on_batch_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_epoch_begin">}\href{../../keras/html/KerasCallback.html#method-on_epoch_begin}{\code{keras::KerasCallback$on_epoch_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_predict_batch_begin">}\href{../../keras/html/KerasCallback.html#method-on_predict_batch_begin}{\code{keras::KerasCallback$on_predict_batch_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_predict_batch_end">}\href{../../keras/html/KerasCallback.html#method-on_predict_batch_end}{\code{keras::KerasCallback$on_predict_batch_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_predict_begin">}\href{../../keras/html/KerasCallback.html#method-on_predict_begin}{\code{keras::KerasCallback$on_predict_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_predict_end">}\href{../../keras/html/KerasCallback.html#method-on_predict_end}{\code{keras::KerasCallback$on_predict_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_test_batch_begin">}\href{../../keras/html/KerasCallback.html#method-on_test_batch_begin}{\code{keras::KerasCallback$on_test_batch_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_test_batch_end">}\href{../../keras/html/KerasCallback.html#method-on_test_batch_end}{\code{keras::KerasCallback$on_test_batch_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_test_begin">}\href{../../keras/html/KerasCallback.html#method-on_test_begin}{\code{keras::KerasCallback$on_test_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_test_end">}\href{../../keras/html/KerasCallback.html#method-on_test_end}{\code{keras::KerasCallback$on_test_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_train_batch_begin">}\href{../../keras/html/KerasCallback.html#method-on_train_batch_begin}{\code{keras::KerasCallback$on_train_batch_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_train_batch_end">}\href{../../keras/html/KerasCallback.html#method-on_train_batch_end}{\code{keras::KerasCallback$on_train_batch_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_train_begin">}\href{../../keras/html/KerasCallback.html#method-on_train_begin}{\code{keras::KerasCallback$on_train_begin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="on_train_end">}\href{../../keras/html/KerasCallback.html#method-on_train_end}{\code{keras::KerasCallback$on_train_end()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasCallback" data-id="set_context">}\href{../../keras/html/KerasCallback.html#method-set_context}{\code{keras::KerasCallback$set_context()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallbackOptCheckpoint$new(
  monitor = "loss",
  training_log = "training_log.csv",
  prepend = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-on_epoch_end"></a>}}
\subsection{Method \code{on_epoch_end()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallbackOptCheckpoint$on_epoch_end(epoch, logs = list())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallbackOptCheckpoint$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
